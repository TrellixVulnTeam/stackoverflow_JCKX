{
    "Body":"As is well known from many blog\/forum posts, Android 2.2 (Froyo) changed the mechanism for the API to kill the process such that a killed process will likely\/possibly be re-started by the OS after being killed. E.g. there is no way to PERMANENTLY 100% guaranteed to stop an application from running short of un-installing it.Question: Is there any code out there (likely part of some custom ROM) that allows permanent killing of a process without re-spawning it afterwards ala Android 1.6?I'm mostly interested if such code exists, NOT whether it is in some specific ROM.I don't much care about specific implementation way (I can think of at least two - either add a new API for \"permanent kill\" or provide a blacklist of apps that a modified AOSP API would respect).UPDATE: Just to clarify - I am NOT looking for a way to prevent an app from being started again due to some event triggering an Intent that the app registered with. I am asking about preventing apps from being started by memory\/process manager just because it was recently killed, even if that app has no Intents registered whatsoever, e.g. not listed in Autostarts app for any of the Intent types.Please note that the above-mentioned notion of \"restarting an app just because\" comes from 2 sources:Froyo help section for a well-regarded system app \"Watchdog\"  Google has changed the kill API that the task killers use. In 2.2 (Froyo), the kill API now just restarts the app. It will come right back, under a new system process.My own observations, where VERY frequently, my Droid X would have apps listed as running in ATK after I killed them, BUT those apps either don't have ANY Intents listed in Autostarts app, or all the Intents listed for them there are 100% disabled. Oh, and these are the types of apps (e.g. games) that are very unlikely to have a side daemon process responsible for reviving them.",
    "ViewCount":"265",
    "LastActivityDate":"2013-10-18T15:36:52.050",
    "ClosedDate":"2015-11-03T15:54:24.907",
    "Title":"Is there any custom ROM that includes a feature to permanently kill a process?",
    "LastEditorUserId":"30530",
    "Tags":"",
    "LastEditDate":"2013-10-18T15:36:52.050",
    "CommentCount":"0",
    "AnswerCount":"1",
    "AcceptedAnswerId":"22027",
    "Score":"3",
    "CommunityOwnedDate":null,
    "LastEditorDisplayName":null,
    "PostTypeId":"1",
    "OwnerUserId":"3258",
    "CreationDate":"2011-06-19T21:40:25.290",
    "FavoriteCount":"1",
    "Id":"10625",
    "history":[
        {
            "Comment":null,
            "CreationDate":"2011-06-19T21:40:25.290",
            "UserDisplayName":null,
            "RevisionGUID":"e8c529fe-7b0f-4a9e-afb5-bb8438ec6d34",
            "UserId":"3258",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"2",
            "Id":"26369",
            "Text":"As is well known from many blog\/forum posts, Android 2.2 (Froyo) changed the mechanism for the API to kill the process such that a killed process will likely\/possibly be re-started by the OS after being killed. E.g. there is no way to PERMANENTLY 100% guaranteed to stop an application from running short of uninstalling it.**Question:** Is there any code out there (likely part of some custom ROM) that allows permanent killing of a process without re-spawning it afterwards ala Android 1.6?I'm mostly interested if such code exists, NOT whether it is in some specific ROM.I don't much care about specific implementation way (I can think of at least two - either add a new API for \"permanent kill\" or provide a blacklist of apps that a modified AOSP API would respect)."
        },
        {
            "Comment":null,
            "CreationDate":"2011-06-19T21:40:25.290",
            "UserDisplayName":null,
            "RevisionGUID":"e8c529fe-7b0f-4a9e-afb5-bb8438ec6d34",
            "UserId":"3258",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"1",
            "Id":"26370",
            "Text":"Is there any custom ROM that includes a feature to permanently kill a process?"
        },
        {
            "Comment":null,
            "CreationDate":"2011-06-19T21:40:25.290",
            "UserDisplayName":null,
            "RevisionGUID":"e8c529fe-7b0f-4a9e-afb5-bb8438ec6d34",
            "UserId":"3258",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"3",
            "Id":"26371",
            "Text":""
        },
        {
            "Comment":"added 408 characters in body",
            "CreationDate":"2011-06-19T23:00:27.717",
            "UserDisplayName":null,
            "RevisionGUID":"7fa49670-47e4-4b90-be2a-1d73a5bb6feb",
            "UserId":"3258",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"5",
            "Id":"26375",
            "Text":"As is well known from many blog\/forum posts, Android 2.2 (Froyo) changed the mechanism for the API to kill the process such that a killed process will likely\/possibly be re-started by the OS after being killed. E.g. there is no way to PERMANENTLY 100% guaranteed to stop an application from running short of uninstalling it.**Question:** Is there any code out there (likely part of some custom ROM) that allows permanent killing of a process without re-spawning it afterwards ala Android 1.6?I'm mostly interested if such code exists, NOT whether it is in some specific ROM.I don't much care about specific implementation way (I can think of at least two - either add a new API for \"permanent kill\" or provide a blacklist of apps that a modified AOSP API would respect).**UPDATE:** Just to clarify - I am NOT looking for a way to prevent an app from being started again due to some event triggering an Intent that the app registered with. I am asking about preventing apps from being started by memory\/process manager **just becasue it was recently killed**, even if that app has **no Intents registered** whatsoever, e.g. not listed in Autostarts app for any of the Intent types."
        },
        {
            "Comment":"added 787 characters in body",
            "CreationDate":"2011-06-19T23:06:52.127",
            "UserDisplayName":null,
            "RevisionGUID":"a84c7e64-e288-4c29-b316-861af652db1a",
            "UserId":"3258",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"5",
            "Id":"26377",
            "Text":"As is well known from many blog\/forum posts, Android 2.2 (Froyo) changed the mechanism for the API to kill the process such that a killed process will likely\/possibly be re-started by the OS after being killed. E.g. there is no way to PERMANENTLY 100% guaranteed to stop an application from running short of uninstalling it.**Question:** Is there any code out there (likely part of some custom ROM) that allows permanent killing of a process without re-spawning it afterwards ala Android 1.6?I'm mostly interested if such code exists, NOT whether it is in some specific ROM.I don't much care about specific implementation way (I can think of at least two - either add a new API for \"permanent kill\" or provide a blacklist of apps that a modified AOSP API would respect).**UPDATE:** Just to clarify - I am NOT looking for a way to prevent an app from being started again due to some event triggering an Intent that the app registered with. I am asking about preventing apps from being started by memory\/process manager **just becasue it was recently killed**, even if that app has **no Intents registered** whatsoever, e.g. not listed in Autostarts app for any of the Intent types.Please note that teh above-mentioned notion of \"restarting an app just because\" comes from 2 sources: - [Froyo help section][1] for a well-regarded system app \"Watchdog\"   > Google has changed the kill API that the task killers use. In 2.2(Froyo), the kill API now just restarts the app. It will come right back, under a new system process. - My own observations, where VERY frequently, my Droid X would have apps listed as running in ATK after I killed them, BUT those apps either don't have ANY Intents listed in Autostarts app, or all the Intents listed for them there are 100% disabled. Oh, and these are the types of apps (e.g. games) that are very unlikely to have a side daemon process responsible for reviving them.  [1]: http:\/\/www.zomut.com\/watchdog\/froyo"
        },
        {
            "Comment":"http:\/\/twitter.com\/#!\/StackAndroid\/status\/97555900037988352",
            "CreationDate":"2011-07-31T06:35:13.500",
            "UserDisplayName":null,
            "RevisionGUID":"dc0dba5d-f0f6-4fee-bb5f-471ca1aa90ed",
            "UserId":null,
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"25",
            "Id":"30197",
            "Text":null
        },
        {
            "Comment":"edited tags; edited tags",
            "CreationDate":"2012-04-19T14:50:41.910",
            "UserDisplayName":null,
            "RevisionGUID":"551c62c6-acba-4594-8e4c-ff00a338de58",
            "UserId":"267",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"6",
            "Id":"61789",
            "Text":""
        },
        {
            "Comment":"Fix spelling mistakes",
            "CreationDate":"2013-10-18T15:36:52.050",
            "UserDisplayName":null,
            "RevisionGUID":"efb7ac36-97f1-493e-b17e-f144a715b968",
            "UserId":"30530",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"5",
            "Id":"183886",
            "Text":"As is well known from many blog\/forum posts, Android 2.2 (Froyo) changed the mechanism for the API to kill the process such that a killed process will likely\/possibly be re-started by the OS after being killed. E.g. there is no way to PERMANENTLY 100% guaranteed to stop an application from running short of un-installing it.**Question:** Is there any code out there (likely part of some custom ROM) that allows permanent killing of a process without re-spawning it afterwards ala Android 1.6?I'm mostly interested if such code exists, NOT whether it is in some specific ROM.I don't much care about specific implementation way (I can think of at least two - either add a new API for \"permanent kill\" or provide a blacklist of apps that a modified AOSP API would respect).**UPDATE:** Just to clarify - I am NOT looking for a way to prevent an app from being started again due to some event triggering an Intent that the app registered with. I am asking about preventing apps from being started by memory\/process manager **just because it was recently killed**, even if that app has **no Intents registered** whatsoever, e.g. not listed in Autostarts app for any of the Intent types.Please note that the above-mentioned notion of \"restarting an app just because\" comes from 2 sources: - [Froyo help section][1] for a well-regarded system app \"Watchdog\"   > Google has changed the kill API that the task killers use. In 2.2 (Froyo), the kill API now just restarts the app. It will come right back, under a new system process. - My own observations, where VERY frequently, my Droid X would have apps listed as running in ATK after I killed them, BUT those apps either don't have ANY Intents listed in Autostarts app, or all the Intents listed for them there are 100% disabled. Oh, and these are the types of apps (e.g. games) that are very unlikely to have a side daemon process responsible for reviving them.  [1]: http:\/\/www.zomut.com\/watchdog\/froyo"
        },
        {
            "Comment":"Proposed by 30530 approved by 16575, 15713 edit id of 5394",
            "CreationDate":"2013-10-18T15:36:52.050",
            "UserDisplayName":null,
            "RevisionGUID":"efb7ac36-97f1-493e-b17e-f144a715b968",
            "UserId":null,
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"24",
            "Id":"183887",
            "Text":null
        },
        {
            "Comment":"102",
            "CreationDate":"2015-11-03T15:54:24.907",
            "UserDisplayName":null,
            "RevisionGUID":"ff75179c-0788-4f0b-ba49-0d74853ec3b5",
            "UserId":"1465",
            "CloseReasonId":null,
            "PostId":"10625",
            "PostHistoryTypeId":"10",
            "Id":"420311",
            "Text":"{\"Voters\":[{\"Id\":1465,\"DisplayName\":\"Matthew Read\"}]}"
        }
    ]
}